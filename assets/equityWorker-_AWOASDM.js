(function(){"use strict";const _=Object.fromEntries(["2","3","4","5","6","7","8","9","10","J","Q","K","A"].map((t,e)=>[t,e]));function g(t,e){return e-t}function y(t){return _[t.rank]}function E(t){for(let e=1;e<t.length;e+=1)if(t[e-1]-1!==t[e])return!1;return!0}function v(t){return Array.from(new Set(t)).sort(g)}function I(t){if(t.length!==7)throw new Error("evaluateSeven expects exactly 7 cards");const e=new Map,r=new Map;for(const n of t){const s=y(n);e.set(s,(e.get(s)??0)+1);const a=n.suit,c=r.get(a)??[];c.push(n),r.set(a,c)}for(const[,n]of r)if(n.length>=5){const s=n.map(y).sort(g),a=v(s),c=a.includes(12)?[...a,-1]:a;for(let h=0;h+4<c.length;h+=1){const x=c.slice(h,h+5);if(E(x))return{class:"straight_flush",ranks:[x[0]===-1?3:x[0],...x.slice(1)]}}}const i=Array.from(e.entries()).map(([n,s])=>({v:n,n:s})).sort((n,s)=>s.n-n.n||s.v-n.v),f=i.find(n=>n.n===4);if(f){const n=i.filter(s=>s.v!==f.v).map(s=>s.v).sort(g);return{class:"four_kind",ranks:[f.v,n[0]]}}const l=i.filter(n=>n.n===3),u=i.filter(n=>n.n===2);if(l.length>=2||l.length>=1&&u.length>=1){const n=l[0],s=l.length>=2?{v:l[1].v}:{v:u[0].v};return{class:"full_house",ranks:[n.v,s.v]}}for(const[,n]of r)if(n.length>=5)return{class:"flush",ranks:n.map(y).sort(g).slice(0,5)};{const n=v(t.map(y)),s=n.includes(12)?[...n,-1]:n;for(let a=0;a+4<s.length;a+=1){const c=s.slice(a,a+5);if(E(c))return{class:"straight",ranks:[c[0]===-1?3:c[0],...c.slice(1)]}}}if(l.length>=1){const n=l[0],s=i.filter(a=>a.n===1).map(a=>a.v).sort(g).slice(0,2);return{class:"three_kind",ranks:[n.v,...s]}}if(u.length>=2){const[n,s]=u.slice(0,2).sort((c,h)=>h.v-c.v),a=i.filter(c=>c.n===1).map(c=>c.v).sort(g)[0];return{class:"two_pair",ranks:[n.v,s.v,a]}}if(u.length===1){const n=u[0],s=i.filter(a=>a.n===1).map(a=>a.v).sort(g).slice(0,3);return{class:"pair",ranks:[n.v,...s]}}return{class:"high_card",ranks:v(t.map(y)).slice(0,5)}}const T=["Clubs","Diamonds","Hearts","Spades"],W=["A","2","3","4","5","6","7","8","9","10","J","Q","K"];function C(){const t=[];for(const e of T)for(const r of W)t.push({rank:r,suit:e});return t}function G(t){let e=t>>>0;return()=>(e^=e<<13,e>>>=0,e^=e>>17,e>>>=0,e^=e<<5,e>>>=0,(e>>>0)/4294967296)}const R={version:"0.3.0-build.88",autoplay:{cpuActionDelayMs:350,playerActionDelayMs:450,autoDealDelayMs:900},pokerAutoplay:{cpuActionDelayMs:150,playerActionDelayMs:200,autoDealDelayMs:500},poker:{startingStack:5e3,chipIconSizePx:30,chipSizePx:30,chipOverlap:.8,maxChipsPerRow:20,rakePercent:0,rakeCap:0,showRakeInUI:!0,blinds:{startingSmallBlind:5,startingBigBlind:10,increaseEveryHands:50,increaseFactor:2},horseshoe:{tableWidthPx:1200,tableHeightPx:720,centerYOffsetPx:-30,basePaddingPx:80,radiusXScale:1.6,radiusYScale:1,arcStartDeg:205,arcEndDeg:-25,edgeBoostEnd:1.1,edgeBoostNearEnd:1.08,topBoostEnd:1.4,topBoostNearEnd:1.5,boardOffsetY:-60,boardGapPx:10,seatWidthPx:200,seatCardScale:.9,potOffsetY:35,showdownOffsetY:70},random:{useSeeded:!0,seed:42,perHandIncrement:1},deal:{perHoleCardMs:300,perBoardCardMs:300,streetPauseMs:1e3},animations:{chipFlyDurationMs:150}},shoe:{defaultNumDecks:6,reshuffleCutoffRatio:.2,cardsPerDeck:52},bankroll:{initialPerSeat:100,casinoInitial:1e4},bets:{defaultPerSeat:10},animation:{cardEnterOffsetTop:-160,cardEnterOffsetDefault:-20,cardExitOffsetY:10,cardStaggerStepMs:80,flatEnterOffsetTop:-80,cardFlipDurationSec:.35},layout:{appMaxWidthPx:1280,handsColumns:3,appControlsMarginBottomPx:12,flatCardOverlapPx:72,flatAppMaxWidthPx:1600,flat:{containerMinHeightVh:75,containerPaddingTopPx:5,containerPaddingBottomPx:10,controlsGapPx:8,dealerLaneGapPx:8,dealerLaneMarginTopPx:8,dealerTotalMarginTopPx:4,playersLaneBottomPx:150,edgePaddingPx:16,playersLaneGapPx:16,playersLanePaddingBottomPx:4,seatPaddingPx:8,seatMinWidthPx:240,seatLowerBoundWidthPx:180,handRowGapPx:4,handRowMarginBottomPx:6,cardRowGapPx:8,infoRowGapPx:8,seatNameMarginBottomPx:4,actionsBottomPx:12,actionsGapPx:8,actionsPaddingPx:8,actionsBorderRadiusPx:10,actionsBetMarginLeftPx:8},multi:{rulesGapPx:12,rulesMarginTopPx:8,detailsMarginTopPx:8,detailsMarginBottomPx:16,progressMarginLeftPx:8,seatBetInputWidthPx:64,doubleTotalsInputWidthPx:120,splitRanksInputWidthPx:140}},simulation:{handsPerRun:1e4,progressUpdateSteps:100},table:{minPlayers:1,maxPlayers:5,defaultNumPlayers:3},ui:{defaultView:"flat",enableFaceImages:!1},rules:{dealerHitsSoft17:!1,blackjackPayout:1.5,doubleTotals:[],doubleAfterSplit:!0,allowSplitRanks:null}},w=self;w.onmessage=t=>{try{const e=t.data;if(!e||e.type!=="run")return;const{seats:r,community:i,samples:f}=e.data,u={type:"done",result:N(r,i,f)};w.postMessage(u)}catch(e){const r={type:"error",error:e.message};w.postMessage(r)}};function N(t,e,r){const i=[];t.forEach((o,p)=>{!o.folded&&o.hole.length===2&&i.push(p)});const f=[];t.forEach((o,p)=>{!o.folded&&o.hole.length!==2&&f.push(p)});const l=i.length+f.length,u=new Array(t.length).fill(0),P=new Array(t.length).fill(0);if(l<=1)return{win:u,tie:P};const n=C(),s=o=>`${o.rank}-${o.suit}`,a=new Set;e.forEach(o=>a.add(s(o))),t.forEach(o=>{o.hole.length===2&&o.hole.forEach(p=>a.add(s(p)))});const c=n.filter(o=>!a.has(s(o))),h=Math.max(0,5-e.length);let x=Math.random;try{if(R?.poker?.random?.useSeeded){const o=((R.poker.random.seed??1)^2779096485)>>>0;x=G(o)}}catch{}for(let o=0;o<r;o+=1){const p=c.slice();L(p,x);const A={};for(const d of f){const b=p.pop(),k=p.pop();A[d]=[b,k]}const q=p.slice(0,h),Y=[...e,...q];let M=-1,S=[],m=[];const D=(d,b)=>{const k=I([...b,...Y]),B=H(k.class);if(m.length===0)M=B,S=k.ranks,m=[d];else{const O=K(B,k.ranks,M,S);O>0?(M=B,S=k.ranks,m=[d]):O===0&&m.push(d)}};i.forEach(d=>D(d,t[d].hole)),f.forEach(d=>D(d,A[d])),m.length===1?u[m[0]]+=1:m.forEach(d=>{P[d]+=1})}return{win:u,tie:P}}function L(t,e){for(let r=t.length-1;r>0;r-=1){const i=Math.floor(e()*(r+1)),f=t[r];t[r]=t[i],t[i]=f}}function H(t){switch(t){case"high_card":return 0;case"pair":return 1;case"two_pair":return 2;case"three_kind":return 3;case"straight":return 4;case"flush":return 5;case"full_house":return 6;case"four_kind":return 7;case"straight_flush":return 8;default:return 0}}function K(t,e,r,i){if(t!==r)return t-r;const f=Math.max(e.length,i.length);for(let l=0;l<f;l+=1){const u=e[l]??-1,P=i[l]??-1;if(u!==P)return u-P}return 0}})();
