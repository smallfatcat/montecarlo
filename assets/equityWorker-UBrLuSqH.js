(function(){"use strict";const C=Object.fromEntries(["2","3","4","5","6","7","8","9","10","J","Q","K","A"].map((e,t)=>[e,t]));function g(e,t){return t-e}function S(e){return C[e.rank]}function I(e){for(let t=1;t<e.length;t+=1)if(e[t-1]-1!==e[t])return!1;return!0}function M(e){return Array.from(new Set(e)).sort(g)}function _(e){if(e.length!==7)throw new Error("evaluateSeven expects exactly 7 cards");const t=new Map,r=new Map;for(const a of e){const n=S(a);t.set(n,(t.get(n)??0)+1);const s=a.suit,i=r.get(s)??[];i.push(a),r.set(s,i)}for(const[,a]of r)if(a.length>=5){const n=a.map(S).sort(g),s=M(n),i=s.includes(12)?[...s,-1]:s;for(let h=0;h+4<i.length;h+=1){const m=i.slice(h,h+5);if(I(m))return{class:"straight_flush",ranks:[m[0]===-1?3:m[0],...m.slice(1)]}}}const l=Array.from(t.entries()).map(([a,n])=>({v:a,n})).sort((a,n)=>n.n-a.n||n.v-a.v),f=l.find(a=>a.n===4);if(f){const a=l.filter(n=>n.v!==f.v).map(n=>n.v).sort(g);return{class:"four_kind",ranks:[f.v,a[0]]}}const c=l.filter(a=>a.n===3),u=l.filter(a=>a.n===2);if(c.length>=2||c.length>=1&&u.length>=1){const a=c[0],n=c.length>=2?{v:c[1].v}:{v:u[0].v};return{class:"full_house",ranks:[a.v,n.v]}}for(const[,a]of r)if(a.length>=5)return{class:"flush",ranks:a.map(S).sort(g).slice(0,5)};{const a=M(e.map(S)),n=a.includes(12)?[...a,-1]:a;for(let s=0;s+4<n.length;s+=1){const i=n.slice(s,s+5);if(I(i))return{class:"straight",ranks:[i[0]===-1?3:i[0],...i.slice(1)]}}}if(c.length>=1){const a=c[0],n=l.filter(s=>s.n===1).map(s=>s.v).sort(g).slice(0,2);return{class:"three_kind",ranks:[a.v,...n]}}if(u.length>=2){const[a,n]=u.slice(0,2).sort((i,h)=>h.v-i.v),s=l.filter(i=>i.n===1).map(i=>i.v).sort(g)[0];return{class:"two_pair",ranks:[a.v,n.v,s]}}if(u.length===1){const a=u[0],n=l.filter(s=>s.n===1).map(s=>s.v).sort(g).slice(0,3);return{class:"pair",ranks:[a.v,...n]}}return{class:"high_card",ranks:M(e.map(S)).slice(0,5)}}const G=["Clubs","Diamonds","Hearts","Spades"],N=["A","2","3","4","5","6","7","8","9","10","J","Q","K"];function T(){const e=[];for(const t of G)for(const r of N)e.push({rank:r,suit:t});return e}function F(e){let t=e>>>0;return()=>(t^=t<<13,t>>>=0,t^=t>>17,t>>>=0,t^=t<<5,t>>>=0,(t>>>0)/4294967296)}const L={startingStack:5e3,rakePercent:0,rakeCap:0,showRakeInUI:!0,chipIconSizePx:30,chipSizePx:30,chipOverlap:.8,maxChipsPerRow:20,blinds:{startingSmallBlind:5,startingBigBlind:10,increaseEveryHands:50,increaseFactor:2},horseshoe:{tableWidthPx:1200,tableHeightPx:720,centerYOffsetPx:-30,basePaddingPx:80,radiusXScale:1.6,radiusYScale:1,arcStartDeg:205,arcEndDeg:-25,edgeBoostEnd:1.1,edgeBoostNearEnd:1.08,topBoostEnd:1.4,topBoostNearEnd:1.5,boardOffsetY:-60,boardGapPx:10,seatWidthPx:200,seatCardScale:.9,potOffsetY:35,showdownOffsetY:70},random:{useSeeded:!0,seed:42,perHandIncrement:1},deal:{perHoleCardMs:300,perBoardCardMs:300,streetPauseMs:1e3},animations:{chipFlyDurationMs:150},autoplay:{cpuActionDelayMs:150,playerActionDelayMs:200,autoDealDelayMs:500}},W={shoe:{defaultNumDecks:6,reshuffleCutoffRatio:.2,cardsPerDeck:52},bankroll:{initialPerSeat:100,casinoInitial:1e4},bets:{defaultPerSeat:10},rules:{dealerHitsSoft17:!1,blackjackPayout:1.5,doubleTotals:[],doubleAfterSplit:!0,allowSplitRanks:null},animation:{cardEnterOffsetTop:-160,cardEnterOffsetDefault:-20,cardExitOffsetY:10,cardStaggerStepMs:80,flatEnterOffsetTop:-80,cardFlipDurationSec:.35},autoplay:{cpuActionDelayMs:350,playerActionDelayMs:450,autoDealDelayMs:900},table:{minPlayers:1,maxPlayers:5,defaultNumPlayers:3}},x={layout:{appMaxWidthPx:1280,handsColumns:3,appControlsMarginBottomPx:12,flatCardOverlapPx:72,flatAppMaxWidthPx:1600,flat:{containerMinHeightVh:75,containerPaddingTopPx:5,containerPaddingBottomPx:10,controlsGapPx:8,dealerLaneGapPx:8,dealerLaneMarginTopPx:8,dealerTotalMarginTopPx:4,playersLaneBottomPx:150,edgePaddingPx:16,playersLaneGapPx:16,playersLanePaddingBottomPx:4,seatPaddingPx:8,seatMinWidthPx:240,seatLowerBoundWidthPx:180,handRowGapPx:4,handRowMarginBottomPx:6,cardRowGapPx:8,infoRowGapPx:8,seatNameMarginBottomPx:4,actionsBottomPx:12,actionsGapPx:8,actionsPaddingPx:8,actionsBorderRadiusPx:10,actionsBetMarginLeftPx:8},multi:{rulesGapPx:12,rulesMarginTopPx:8,detailsMarginTopPx:8,detailsMarginBottomPx:16,progressMarginLeftPx:8,seatBetInputWidthPx:64,doubleTotalsInputWidthPx:120,splitRanksInputWidthPx:140}},ui:{defaultView:"flat",enableFaceImages:!1,enableCardBackImage:!0,cardBackImage:"default.png"},simulation:{handsPerRun:1e4,progressUpdateSteps:100}},D={version:"0.3.0-build.114",poker:L,blackjack:W,ui:x,...{autoplay:{cpuActionDelayMs:350,playerActionDelayMs:450,autoDealDelayMs:900},shoe:{defaultNumDecks:6,reshuffleCutoffRatio:.2,cardsPerDeck:52},bankroll:{initialPerSeat:100,casinoInitial:1e4},bets:{defaultPerSeat:10},animation:{cardEnterOffsetTop:-160,cardEnterOffsetDefault:-20,cardExitOffsetY:10,cardStaggerStepMs:80,flatEnterOffsetTop:-80,cardFlipDurationSec:.35},table:{minPlayers:1,maxPlayers:5,defaultNumPlayers:3},rules:{dealerHitsSoft17:!1,blackjackPayout:1.5,doubleTotals:[],doubleAfterSplit:!0,allowSplitRanks:null}},layout:x.layout,simulation:x.simulation,cardBackImage:x.ui.cardBackImage,enableCardBackImage:x.ui.enableCardBackImage,enableFaceImages:x.ui.enableFaceImages},b=self;b.onmessage=e=>{try{const t=e.data;if(!t||t.type!=="run")return;const{seats:r,community:l,samples:f}=t.data,u={type:"done",result:K(r,l,f)};b.postMessage(u)}catch(t){const r={type:"error",error:t.message};b.postMessage(r)}};function K(e,t,r){const l=[];e.forEach((o,p)=>{!o.folded&&o.hole.length===2&&l.push(p)});const f=[];e.forEach((o,p)=>{!o.folded&&o.hole.length!==2&&f.push(p)});const c=l.length+f.length,u=new Array(e.length).fill(0),P=new Array(e.length).fill(0);if(c<=1)return{win:u,tie:P};const a=T(),n=o=>`${o.rank}-${o.suit}`,s=new Set;t.forEach(o=>s.add(n(o))),e.forEach(o=>{o.hole.length===2&&o.hole.forEach(p=>s.add(n(p)))});const i=a.filter(o=>!s.has(n(o))),h=Math.max(0,5-t.length);let m=Math.random;try{if(D?.poker?.random?.useSeeded){const o=((D.poker.random.seed??1)^2779096485)>>>0;m=F(o)}}catch{}for(let o=0;o<r;o+=1){const p=i.slice();H(p,m);const O={};for(const d of f){const B=p.pop(),y=p.pop();O[d]=[B,y]}const j=p.slice(0,h),U=[...t,...j];let w=-1,v=[],k=[];const A=(d,B)=>{const y=_([...B,...U]),E=Y(y.class);if(k.length===0)w=E,v=y.ranks,k=[d];else{const R=q(E,y.ranks,w,v);R>0?(w=E,v=y.ranks,k=[d]):R===0&&k.push(d)}};l.forEach(d=>A(d,e[d].hole)),f.forEach(d=>A(d,O[d])),k.length===1?u[k[0]]+=1:k.forEach(d=>{P[d]+=1})}return{win:u,tie:P}}function H(e,t){for(let r=e.length-1;r>0;r-=1){const l=Math.floor(t()*(r+1)),f=e[r];e[r]=e[l],e[l]=f}}function Y(e){switch(e){case"high_card":return 0;case"pair":return 1;case"two_pair":return 2;case"three_kind":return 3;case"straight":return 4;case"flush":return 5;case"full_house":return 6;case"four_kind":return 7;case"straight_flush":return 8;default:return 0}}function q(e,t,r,l){if(e!==r)return e-r;const f=Math.max(t.length,l.length);for(let c=0;c<f;c+=1){const u=t[c]??-1,P=l[c]??-1;if(u!==P)return u-P}return 0}})();
