(function(){"use strict";const x=Object.fromEntries(["2","3","4","5","6","7","8","9","10","J","Q","K","A"].map((t,e)=>[t,e]));function p(t,e){return e-t}function v(t){return x[t.rank]}function R(t){for(let e=1;e<t.length;e+=1)if(t[e-1]-1!==t[e])return!1;return!0}function _(t){return Array.from(new Set(t)).sort(p)}function K(t){if(t.length!==7)throw new Error("evaluateSeven expects exactly 7 cards");const e=new Map,o=new Map;for(const n of t){const s=v(n);e.set(s,(e.get(s)??0)+1);const r=n.suit,a=o.get(r)??[];a.push(n),o.set(r,a)}for(const[,n]of o)if(n.length>=5){const s=n.map(v).sort(p),r=_(s),a=r.includes(12)?[...r,-1]:r;for(let h=0;h+4<a.length;h+=1){const i=a.slice(h,h+5);if(R(i))return{class:"straight_flush",ranks:[i[0]===-1?3:i[0],...i.slice(1)]}}}const c=Array.from(e.entries()).map(([n,s])=>({v:n,n:s})).sort((n,s)=>s.n-n.n||s.v-n.v),f=c.find(n=>n.n===4);if(f){const n=c.filter(s=>s.v!==f.v).map(s=>s.v).sort(p);return{class:"four_kind",ranks:[f.v,n[0]]}}const l=c.filter(n=>n.n===3),u=c.filter(n=>n.n===2);if(l.length>=2||l.length>=1&&u.length>=1){const n=l[0],s=l.length>=2?{v:l[1].v}:{v:u[0].v};return{class:"full_house",ranks:[n.v,s.v]}}for(const[,n]of o)if(n.length>=5)return{class:"flush",ranks:n.map(v).sort(p).slice(0,5)};{const n=_(t.map(v)),s=n.includes(12)?[...n,-1]:n;for(let r=0;r+4<s.length;r+=1){const a=s.slice(r,r+5);if(R(a))return{class:"straight",ranks:[a[0]===-1?3:a[0],...a.slice(1)]}}}if(l.length>=1){const n=l[0],s=c.filter(r=>r.n===1).map(r=>r.v).sort(p).slice(0,2);return{class:"three_kind",ranks:[n.v,...s]}}if(u.length>=2){const[n,s]=u.slice(0,2).sort((a,h)=>h.v-a.v),r=c.filter(a=>a.n===1).map(a=>a.v).sort(p)[0];return{class:"two_pair",ranks:[n.v,s.v,r]}}if(u.length===1){const n=u[0],s=c.filter(r=>r.n===1).map(r=>r.v).sort(p).slice(0,3);return{class:"pair",ranks:[n.v,...s]}}return{class:"high_card",ranks:_(t.map(v)).slice(0,5)}}const q=["Clubs","Diamonds","Hearts","Spades"],b=["A","2","3","4","5","6","7","8","9","10","J","Q","K"];function O(){const t=[];for(const e of q)for(const o of b)t.push({rank:o,suit:e});return t}const y=self;y.onmessage=t=>{try{const e=t.data;if(!e||e.type!=="run")return;const{seats:o,community:c,samples:f}=e.data,u={type:"done",result:I(o,c,f)};y.postMessage(u)}catch(e){const o={type:"error",error:e.message};y.postMessage(o)}};function I(t,e,o){const c=[];t.forEach((i,d)=>{!i.folded&&i.hole.length===2&&c.push(d)});const f=c.length,l=new Array(t.length).fill(0),u=new Array(t.length).fill(0);if(f<=1)return{win:l,tie:u};const m=O(),n=new Set,s=i=>`${i.rank}-${i.suit}`;e.forEach(i=>n.add(s(i))),t.forEach(i=>i.hole.forEach(d=>n.add(s(d))));const r=m.filter(i=>!n.has(s(i))),a=Math.max(0,5-e.length),h=Math.random;for(let i=0;i<o;i+=1){N(r,h);const d=r.slice(0,a),j=[...e,...d];let A=-1,S=[],g=[];c.forEach(k=>{const B=t[k],w=K([...B.hole,...j]),E=D(w.class);if(g.length===0)A=E,S=w.ranks,g=[k];else{const M=T(E,w.ranks,A,S);M>0?(A=E,S=w.ranks,g=[k]):M===0&&g.push(k)}}),g.length===1?l[g[0]]+=1:g.forEach(k=>{u[k]+=1})}return{win:l,tie:u}}function N(t,e){for(let o=t.length-1;o>0;o-=1){const c=Math.floor(e()*(o+1)),f=t[o];t[o]=t[c],t[c]=f}}function D(t){switch(t){case"high_card":return 0;case"pair":return 1;case"two_pair":return 2;case"three_kind":return 3;case"straight":return 4;case"flush":return 5;case"full_house":return 6;case"four_kind":return 7;case"straight_flush":return 8;default:return 0}}function T(t,e,o,c){if(t!==o)return t-o;const f=Math.max(e.length,c.length);for(let l=0;l<f;l+=1){const u=e[l]??-1,m=c[l]??-1;if(u!==m)return u-m}return 0}})();
