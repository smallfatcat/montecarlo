(function(){"use strict";const _=Object.fromEntries(["2","3","4","5","6","7","8","9","10","J","Q","K","A"].map((t,e)=>[t,e]));function g(t,e){return e-t}function v(t){return _[t.rank]}function R(t){for(let e=1;e<t.length;e+=1)if(t[e-1]-1!==t[e])return!1;return!0}function w(t){return Array.from(new Set(t)).sort(g)}function I(t){if(t.length!==7)throw new Error("evaluateSeven expects exactly 7 cards");const e=new Map,a=new Map;for(const n of t){const s=v(n);e.set(s,(e.get(s)??0)+1);const r=n.suit,c=a.get(r)??[];c.push(n),a.set(r,c)}for(const[,n]of a)if(n.length>=5){const s=n.map(v).sort(g),r=w(s),c=r.includes(12)?[...r,-1]:r;for(let h=0;h+4<c.length;h+=1){const x=c.slice(h,h+5);if(R(x))return{class:"straight_flush",ranks:[x[0]===-1?3:x[0],...x.slice(1)]}}}const i=Array.from(e.entries()).map(([n,s])=>({v:n,n:s})).sort((n,s)=>s.n-n.n||s.v-n.v),f=i.find(n=>n.n===4);if(f){const n=i.filter(s=>s.v!==f.v).map(s=>s.v).sort(g);return{class:"four_kind",ranks:[f.v,n[0]]}}const l=i.filter(n=>n.n===3),u=i.filter(n=>n.n===2);if(l.length>=2||l.length>=1&&u.length>=1){const n=l[0],s=l.length>=2?{v:l[1].v}:{v:u[0].v};return{class:"full_house",ranks:[n.v,s.v]}}for(const[,n]of a)if(n.length>=5)return{class:"flush",ranks:n.map(v).sort(g).slice(0,5)};{const n=w(t.map(v)),s=n.includes(12)?[...n,-1]:n;for(let r=0;r+4<s.length;r+=1){const c=s.slice(r,r+5);if(R(c))return{class:"straight",ranks:[c[0]===-1?3:c[0],...c.slice(1)]}}}if(l.length>=1){const n=l[0],s=i.filter(r=>r.n===1).map(r=>r.v).sort(g).slice(0,2);return{class:"three_kind",ranks:[n.v,...s]}}if(u.length>=2){const[n,s]=u.slice(0,2).sort((c,h)=>h.v-c.v),r=i.filter(c=>c.n===1).map(c=>c.v).sort(g)[0];return{class:"two_pair",ranks:[n.v,s.v,r]}}if(u.length===1){const n=u[0],s=i.filter(r=>r.n===1).map(r=>r.v).sort(g).slice(0,3);return{class:"pair",ranks:[n.v,...s]}}return{class:"high_card",ranks:w(t.map(v)).slice(0,5)}}const T=["Clubs","Diamonds","Hearts","Spades"],W=["A","2","3","4","5","6","7","8","9","10","J","Q","K"];function C(){const t=[];for(const e of T)for(const a of W)t.push({rank:a,suit:e});return t}function G(t){let e=t>>>0;return()=>(e^=e<<13,e>>>=0,e^=e>>17,e>>>=0,e^=e<<5,e>>>=0,(e>>>0)/4294967296)}const B={version:"0.1.2",autoplay:{cpuActionDelayMs:350,playerActionDelayMs:450,autoDealDelayMs:900},pokerAutoplay:{cpuActionDelayMs:250,playerActionDelayMs:300,autoDealDelayMs:700},poker:{chipIconSizePx:30,chipSizePx:30,chipOverlap:.8,maxChipsPerRow:20,rakePercent:0,rakeCap:0,showRakeInUI:!0,blinds:{increaseEveryHands:50,increaseFactor:2},horseshoe:{tableWidthPx:1200,tableHeightPx:720,centerYOffsetPx:-30,basePaddingPx:80,radiusXScale:1.6,radiusYScale:1,arcStartDeg:205,arcEndDeg:-25,edgeBoostEnd:1.1,edgeBoostNearEnd:1.08,topBoostEnd:1.4,topBoostNearEnd:1.5,boardOffsetY:-60,boardGapPx:10,seatWidthPx:200,seatCardScale:.9,potOffsetY:35,showdownOffsetY:70},random:{useSeeded:!0,seed:42,perHandIncrement:1},deal:{perHoleCardMs:300,perBoardCardMs:300,streetPauseMs:1e3}},shoe:{defaultNumDecks:6,reshuffleCutoffRatio:.2,cardsPerDeck:52},bankroll:{initialPerSeat:100,casinoInitial:1e4},bets:{defaultPerSeat:10},animation:{cardEnterOffsetTop:-160,cardEnterOffsetDefault:-20,cardExitOffsetY:10,cardStaggerStepMs:80,flatEnterOffsetTop:-80,cardFlipDurationSec:.35},layout:{appMaxWidthPx:1280,handsColumns:3,appControlsMarginBottomPx:12,flatCardOverlapPx:72,flatAppMaxWidthPx:1600,flat:{containerMinHeightVh:75,containerPaddingTopPx:5,containerPaddingBottomPx:10,controlsGapPx:8,dealerLaneGapPx:8,dealerLaneMarginTopPx:8,dealerTotalMarginTopPx:4,playersLaneBottomPx:150,edgePaddingPx:16,playersLaneGapPx:16,playersLanePaddingBottomPx:4,seatPaddingPx:8,seatMinWidthPx:240,seatLowerBoundWidthPx:180,handRowGapPx:4,handRowMarginBottomPx:6,cardRowGapPx:8,infoRowGapPx:8,seatNameMarginBottomPx:4,actionsBottomPx:12,actionsGapPx:8,actionsPaddingPx:8,actionsBorderRadiusPx:10,actionsBetMarginLeftPx:8},multi:{rulesGapPx:12,rulesMarginTopPx:8,detailsMarginTopPx:8,detailsMarginBottomPx:16,progressMarginLeftPx:8,seatBetInputWidthPx:64,doubleTotalsInputWidthPx:120,splitRanksInputWidthPx:140}},simulation:{handsPerRun:1e4,progressUpdateSteps:100},table:{minPlayers:1,maxPlayers:5,defaultNumPlayers:3},ui:{defaultView:"flat",enableFaceImages:!1},rules:{dealerHitsSoft17:!1,blackjackPayout:1.5,doubleTotals:[],doubleAfterSplit:!0,allowSplitRanks:null}},y=self;y.onmessage=t=>{try{const e=t.data;if(!e||e.type!=="run")return;const{seats:a,community:i,samples:f}=e.data,u={type:"done",result:N(a,i,f)};y.postMessage(u)}catch(e){const a={type:"error",error:e.message};y.postMessage(a)}};function N(t,e,a){const i=[];t.forEach((o,p)=>{!o.folded&&o.hole.length===2&&i.push(p)});const f=[];t.forEach((o,p)=>{!o.folded&&o.hole.length!==2&&f.push(p)});const l=i.length+f.length,u=new Array(t.length).fill(0),P=new Array(t.length).fill(0);if(l<=1)return{win:u,tie:P};const n=C(),s=o=>`${o.rank}-${o.suit}`,r=new Set;e.forEach(o=>r.add(s(o))),t.forEach(o=>{o.hole.length===2&&o.hole.forEach(p=>r.add(s(p)))});const c=n.filter(o=>!r.has(s(o))),h=Math.max(0,5-e.length);let x=Math.random;try{if(B?.poker?.random?.useSeeded){const o=((B.poker.random.seed??1)^2779096485)>>>0;x=G(o)}}catch{}for(let o=0;o<a;o+=1){const p=c.slice();L(p,x);const A={};for(const d of f){const E=p.pop(),m=p.pop();A[d]=[E,m]}const q=p.slice(0,h),Y=[...e,...q];let M=-1,S=[],k=[];const D=(d,E)=>{const m=I([...E,...Y]),b=H(m.class);if(k.length===0)M=b,S=m.ranks,k=[d];else{const O=K(b,m.ranks,M,S);O>0?(M=b,S=m.ranks,k=[d]):O===0&&k.push(d)}};i.forEach(d=>D(d,t[d].hole)),f.forEach(d=>D(d,A[d])),k.length===1?u[k[0]]+=1:k.forEach(d=>{P[d]+=1})}return{win:u,tie:P}}function L(t,e){for(let a=t.length-1;a>0;a-=1){const i=Math.floor(e()*(a+1)),f=t[a];t[a]=t[i],t[i]=f}}function H(t){switch(t){case"high_card":return 0;case"pair":return 1;case"two_pair":return 2;case"three_kind":return 3;case"straight":return 4;case"flush":return 5;case"full_house":return 6;case"four_kind":return 7;case"straight_flush":return 8;default:return 0}}function K(t,e,a,i){if(t!==a)return t-a;const f=Math.max(e.length,i.length);for(let l=0;l<f;l+=1){const u=e[l]??-1,P=i[l]??-1;if(u!==P)return u-P}return 0}})();
