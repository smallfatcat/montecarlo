(function(){"use strict";const G=["Clubs","Diamonds","Hearts","Spades"],X=["A","2","3","4","5","6","7","8","9","10","J","Q","K"];function Y(){const e=[];for(const t of G)for(const n of X)e.push({rank:n,suit:t});return e}function R(e){if(!Number.isInteger(e)||e<=0)throw new Error("numberOfDecks must be a positive integer");const t=[];for(let n=0;n<e;n+=1)t.push(...Y());return t}function E(e,t=Math.random){for(let n=e.length-1;n>0;n-=1){const s=Math.floor(t()*(n+1));[e[n],e[s]]=[e[s],e[n]]}return e}const L={smallBlind:1,bigBlind:2};function B(e){return{...e,deck:[...e.deck],community:[...e.community],seats:e.seats.map(t=>({...t,hole:[...t.hole]})),pot:{...e.pot},rules:{...e.rules}}}function Z(e){return e.rules.bigBlind}function q(e,t){const n=e.length;for(let s=1;s<=n;s+=1){const r=(t+s)%n,o=e[r];if(!o.hasFolded&&!o.isAllIn&&o.stack>0)return r}return null}function N(e,t){const n=e.length;for(let s=1;s<=n;s+=1){const r=(t+s)%n;if(e[r].stack>0)return r}return null}function tt(e){return e.filter(t=>!t.hasFolded&&t.stack>0).length}const D={poker:{rakePercent:0,blinds:{increaseEveryHands:50,increaseFactor:2}}},et=Object.fromEntries(["2","3","4","5","6","7","8","9","10","J","Q","K","A"].map((e,t)=>[e,t]));function M(e,t){return t-e}function y(e){return et[e.rank]}function F(e){for(let t=1;t<e.length;t+=1)if(e[t-1]-1!==e[t])return!1;return!0}function _(e){return Array.from(new Set(e)).sort(M)}function J(e){if(e.length!==7)throw new Error("evaluateSeven expects exactly 7 cards");const t=new Map,n=new Map;for(const l of e){const u=y(l);t.set(u,(t.get(u)??0)+1);const a=l.suit,i=n.get(a)??[];i.push(l),n.set(a,i)}for(const[,l]of n)if(l.length>=5){const u=l.map(y).sort(M),a=_(u),i=a.includes(12)?[...a,-1]:a;for(let h=0;h+4<i.length;h+=1){const d=i.slice(h,h+5);if(F(d))return{class:"straight_flush",ranks:[d[0]===-1?3:d[0],...d.slice(1)]}}}const s=Array.from(t.entries()).map(([l,u])=>({v:l,n:u})).sort((l,u)=>u.n-l.n||u.v-l.v),r=s.find(l=>l.n===4);if(r){const l=s.filter(u=>u.v!==r.v).map(u=>u.v).sort(M);return{class:"four_kind",ranks:[r.v,l[0]]}}const o=s.filter(l=>l.n===3),c=s.filter(l=>l.n===2);if(o.length>=2||o.length>=1&&c.length>=1){const l=o[0],u=o.length>=2?{v:o[1].v}:{v:c[0].v};return{class:"full_house",ranks:[l.v,u.v]}}for(const[,l]of n)if(l.length>=5)return{class:"flush",ranks:l.map(y).sort(M).slice(0,5)};{const l=_(e.map(y)),u=l.includes(12)?[...l,-1]:l;for(let a=0;a+4<u.length;a+=1){const i=u.slice(a,a+5);if(F(i))return{class:"straight",ranks:[i[0]===-1?3:i[0],...i.slice(1)]}}}if(o.length>=1){const l=o[0],u=s.filter(a=>a.n===1).map(a=>a.v).sort(M).slice(0,2);return{class:"three_kind",ranks:[l.v,...u]}}if(c.length>=2){const[l,u]=c.slice(0,2).sort((i,h)=>h.v-i.v),a=s.filter(i=>i.n===1).map(i=>i.v).sort(M)[0];return{class:"two_pair",ranks:[l.v,u.v,a]}}if(c.length===1){const l=c[0],u=s.filter(a=>a.n===1).map(a=>a.v).sort(M).slice(0,3);return{class:"pair",ranks:[l.v,...u]}}return{class:"high_card",ranks:_(e.map(y)).slice(0,5)}}function nt(e,t){const n=["high_card","pair","two_pair","three_kind","straight","flush","full_house","four_kind","straight_flush"],s=n.indexOf(e.class),r=n.indexOf(t.class);if(s!==r)return s-r;const o=Math.max(e.ranks.length,t.ranks.length);for(let c=0;c<o;c+=1){const f=e.ranks[c]??-1,l=t.ranks[c]??-1;if(f!==l)return f-l}return 0}function H(e){if(e.length!==5)throw new Error("evaluateFive expects exactly 5 cards");const t=new Map,n=new Map;for(const a of e){const i=y(a);t.set(i,(t.get(i)??0)+1);const h=a.suit,d=n.get(h)??[];d.push(a),n.set(h,d)}for(const[,a]of n)if(a.length>=5){const i=a.map(y).sort(M),h=_(i),d=h.includes(12)?[...h,-1]:h;for(let m=0;m+4<d.length;m+=1){const p=d.slice(m,m+5);if(F(p))return{class:"straight_flush",ranks:[p[0]===-1?3:p[0],...p.slice(1)]}}const x=a.map(y).sort(M).slice(0,5);if(x.length===5)return{class:"flush",ranks:x}}const s=Array.from(t.entries()).map(([a,i])=>({v:a,n:i})).sort((a,i)=>i.n-a.n||i.v-a.v),r=s.find(a=>a.n===4);if(r){const a=s.filter(i=>i.v!==r.v).map(i=>i.v).sort(M);return{class:"four_kind",ranks:[r.v,a[0]]}}const o=s.filter(a=>a.n===3),c=s.filter(a=>a.n===2);if(o.length>=1&&(c.length>=1||o.length>=2)){const a=o[0],i=o.length>=2?{v:o[1].v}:{v:c[0].v};return{class:"full_house",ranks:[a.v,i.v]}}const f=_(e.map(y)),l=f.includes(12)?[...f,-1]:f;for(let a=0;a+4<l.length;a+=1){const i=l.slice(a,a+5);if(F(i))return{class:"straight",ranks:[i[0]===-1?3:i[0],...i.slice(1)]}}if(o.length>=1){const a=o[0],i=s.filter(h=>h.n===1).map(h=>h.v).sort(M).slice(0,2);return{class:"three_kind",ranks:[a.v,...i]}}if(c.length>=2){const[a,i]=c.slice(0,2).sort((d,x)=>x.v-d.v),h=s.filter(d=>d.n===1).map(d=>d.v).sort(M)[0];return{class:"two_pair",ranks:[a.v,i.v,h]}}if(c.length===1){const a=c[0],i=s.filter(h=>h.n===1).map(h=>h.v).sort(M).slice(0,3);return{class:"pair",ranks:[a.v,...i]}}return{class:"high_card",ranks:_(e.map(y)).slice(0,5)}}function w(e){for(;;){const t=e.pop();if(t)return t;e.push(...E(R(6)))}}function st(e,t,n=200,s){const r=Array.from({length:e},(o,c)=>({seatIndex:c,isCPU:t.includes(c),hole:[],stack:n,committedThisStreet:0,totalCommitted:0,hasFolded:!1,isAllIn:!1}));return{handId:0,deck:E(R(6)),community:[],seats:r,buttonIndex:0,street:null,status:"idle",currentToAct:null,lastAggressorIndex:null,betToCall:0,lastRaiseAmount:L.bigBlind,pot:{main:0},rules:{...L},gameOver:!1}}function rt(e){const t=B(e);if(t.gameOver)return t;const n=D.poker.blinds?.increaseEveryHands,s=D.poker.blinds?.increaseFactor;if(t.handId>0&&t.handId%n===0&&(t.rules.smallBlind=Math.max(1,t.rules.smallBlind*s),t.rules.bigBlind=Math.max(1,t.rules.bigBlind*s)),t.deck.length<20&&(t.deck=E(R(6))),t.handId+=1,t.community=[],t.seats=t.seats.map(u=>({...u,hole:[],committedThisStreet:0,totalCommitted:0,hasFolded:u.stack<=0,isAllIn:!1})),t.pot={main:0},t.lastRaiseAmount=t.rules.bigBlind,t.betToCall=0,t.street="preflop",t.status="in_hand",t.seats.filter(u=>u.stack>0).length<2)return t.status="hand_over",t.gameOver=!0,t;const o=N(t.seats,t.buttonIndex),c=N(t.seats,o);Q(t,o,t.rules.smallBlind),Q(t,c,t.rules.bigBlind);const f=t.seats.filter(u=>u.stack>0).length*2;t.deck.length<f&&(t.deck=E(R(6)));for(let u=0;u<2;u+=1)for(let a=0;a<t.seats.length;a+=1){const i=(t.buttonIndex+1+a)%t.seats.length,h=t.seats[i];h.stack<=0||h.hole.push(w(t.deck))}return t.seats.filter(u=>u.stack>0).length<2?(t.status="hand_over",t.gameOver=!0,t):(t.currentToAct=q(t.seats,c),t.currentToAct==null?P(t):(t.lastAggressorIndex=c,t.betToCall=Math.max(...t.seats.map(u=>u.committedThisStreet)),t))}function Q(e,t,n){const s=e.seats[t];if(s.stack<=0)return;const r=Math.min(s.stack,n);s.stack-=r,s.committedThisStreet+=r,s.totalCommitted+=r,e.pot.main+=r,s.stack===0&&(s.isAllIn=!0)}function at(e){if(e.status!=="in_hand"||e.currentToAct==null)return[];const t=e.seats[e.currentToAct];if(t.isAllIn||t.hasFolded)return[];const n=e.betToCall-t.committedThisStreet,s=n<=0,r=e.betToCall>0,o=r&&!t.isAllIn&&t.stack>n,c=s&&!r&&t.stack>0,f=["fold"];return s?f.push("check"):f.push("call"),c&&f.push("bet"),o&&f.push("raise"),f}function ot(e,t){if(e.status!=="in_hand"||e.currentToAct==null)return e;const n=B(e),s=n.currentToAct,r=n.seats[s];if(r.hasFolded||r.isAllIn)return n;const o=Math.max(0,n.betToCall-r.committedThisStreet),c=Z(n);switch(t.type){case"fold":{r.hasFolded=!0;break}case"check":{if(o>0)throw new Error("Cannot check facing a bet");break}case"call":{if(o<=0)throw new Error("Nothing to call");const i=Math.min(r.stack,o);W(n,r,i);break}case"bet":{if(o>0)throw new Error("Cannot bet facing a bet");const i=Math.max(t.amount??c,c),h=Math.min(r.stack,i);W(n,r,h),n.betToCall=r.committedThisStreet,n.lastRaiseAmount=h,n.lastAggressorIndex=r.seatIndex;break}case"raise":{if(n.betToCall<=0)throw new Error("Nothing to raise");const i=Math.max(n.lastRaiseAmount,c),h=Math.max(t.amount??i,0),d=Math.max(0,r.stack-o),x=Math.min(h,d),m=Math.min(r.stack,o+x);if(m<=0)return n;const p=r.committedThisStreet;W(n,r,m),n.betToCall=Math.max(n.betToCall,r.committedThisStreet);const g=r.committedThisStreet-p-o;g>=i&&(n.lastRaiseAmount=g,n.lastAggressorIndex=r.seatIndex);break}default:return n}if(tt(n.seats)<=1)return P(n);const f=q(n.seats,s),l=n.seats.filter(i=>!i.hasFolded&&!i.isAllIn&&i.hole.length===2),u=l.length===0,a=u||l.every(i=>i.committedThisStreet===n.betToCall);if(u)return V(n);if(a){const i=n.lastAggressorIndex;if(i!=null){if(s===i)return V(n);if(f===i)return n.currentToAct=f,n}return V(n)}return n.currentToAct=f,n}function W(e,t,n){const s=Math.min(n,t.stack);t.stack-=s,t.committedThisStreet+=s,t.totalCommitted+=s,e.pot.main+=s,t.stack===0&&(t.isAllIn=!0)}function it(e){e.seats.forEach(t=>t.committedThisStreet=0),e.betToCall=0,e.lastRaiseAmount=e.rules.bigBlind,e.lastAggressorIndex=null}function V(e){const t=B(e);if(t.street==="preflop")t.community.push(w(t.deck),w(t.deck),w(t.deck)),t.street="flop";else if(t.street==="flop")t.community.push(w(t.deck)),t.street="turn";else if(t.street==="turn")t.community.push(w(t.deck)),t.street="river";else if(t.street==="river")return t.street="showdown",P(t);it(t);let n=q(t.seats,t.buttonIndex);if(n==null)return P(t);t.currentToAct=n;const s=ut(t.seats,n);return t.lastAggressorIndex=s,t}function P(e){const t=B(e),n=t.seats.filter(o=>!o.hasFolded&&o.hole.length===2);if(n.length===1){const o=U(t.pot.main);n[0].stack+=t.pot.main-o}else{for(;t.community.length<5;)t.community.push(w(t.deck));const o=lt(t);for(const c of o){if(c.amount<=0||c.eligibleSeatIdxs.length===0)continue;const f=U(c.amount),l=c.amount-f,u=c.eligibleSeatIdxs.filter(m=>t.seats[m].hole.length===2).map(m=>({idx:m,eval:J([...t.seats[m].hole,...t.community])}));let a=null,i=[];const h={high_card:0,pair:1,two_pair:2,three_kind:3,straight:4,flush:5,full_house:6,four_kind:7,straight_flush:8};for(const m of u){const p=h[m.eval.class];if(!a)a={classIdx:p,ranks:m.eval.ranks},i=[m.idx];else{const g=p-a.classIdx,A=g===0?ct(m.eval.ranks,a.ranks):g;A>0?(a={classIdx:p,ranks:m.eval.ranks},i=[m.idx]):A===0&&i.push(m.idx)}}const d=Math.floor(l/i.length);let x=l-d*i.length;for(const m of i)t.seats[m].stack+=d;x>0&&ft(i,x,(t.buttonIndex+1)%t.seats.length,t.seats.length,m=>{t.seats[m].stack+=1})}}t.status="hand_over",t.currentToAct=null,t.street="showdown";const s=N(t.seats,t.buttonIndex);return s!=null&&(t.buttonIndex=s),t.seats.filter(o=>o.stack>0).length<2&&(t.gameOver=!0),t}function ct(e,t){const n=Math.max(e.length,t.length);for(let s=0;s<n;s+=1){const r=e[s]??-1,o=t[s]??-1;if(r!==o)return r-o}return 0}function lt(e){const t=e.seats.map((r,o)=>({idx:o,total:Math.max(0,Math.floor(r.totalCommitted))})).filter(r=>r.total>0).sort((r,o)=>r.total-o.total);if(t.length===0)return[];const n=[];let s=0;for(let r=0;r<t.length;r+=1){const o=t[r].total,c=o-s;if(c>0){const f=t.slice(r).map(a=>a.idx),l=c*f.length,u=f.filter(a=>!e.seats[a].hasFolded);n.push({amount:l,eligibleSeatIdxs:u}),s=o}}return n}function ut(e,t){const n=e.length;for(let s=1;s<=n;s+=1){const r=(t-s+n)%n,o=e[r];if(!o.hasFolded&&!o.isAllIn)return r}return null}function ft(e,t,n,s,r){let o=n;for(;t>0;){const c=e.find(f=>f===o);if(c!=null&&(r(c),t-=1,t===0))break;o=(o+1)%s}}function U(e){const t=D.poker.rakePercent;let n=Math.floor(e*t);return Math.max(0,n)}const ht=Object.fromEntries(["2","3","4","5","6","7","8","9","10","J","Q","K","A"].map((e,t)=>[e,t]));function v(e){return ht[e]}function dt(e,t){return e.suit===t.suit}function mt(e){const t=new Map;for(const n of e)t.set(n.rank,(t.get(n.rank)??0)+1);return t}function pt(e){const t=new Map;for(const n of e)t.set(n.suit,(t.get(n.suit)??0)+1);return t}function gt(e){return e.length===0?null:e.map(t=>t.rank).sort((t,n)=>v(n)-v(t))[0]??null}function kt(e,t){const n=pt([...e,...t]);for(const[,s]of n)if(s>=4)return!0;return!1}function vt(e,t){const n=Array.from(new Set([...e,...t].map(s=>v(s.rank)))).sort((s,r)=>s-r);for(let s=0;s+3<n.length;s+=1){const r=n[s],o=n[s+1],c=n[s+2],f=n[s+3];if(o===r+1&&c===o+1&&f===c+1)return!0}return!!(n.includes(v("A"))&&n.includes(v("2"))&&n.includes(v("3"))&&n.includes(v("4")))}function xt(e,t){const n=mt([...e,...t]),s=gt(t);let r=!1,o=!1,c=!1,f=!1,l=!1,u=0,a=0;for(const[,g]of n)g===4&&(f=!0),g===3&&(a+=1),g===2&&(u+=1);u>=1&&(r=!0),u>=2&&(o=!0),a>=1&&(c=!0),a>=1&&(u>=1||a>=2)&&(l=!0);let i=!1,h=!1;if(r)if(t.length>=3){if(s&&e.find(g=>g.rank===s)!=null&&(i=!0),e.length===2&&e[0].rank===e[1].rank){const g=v(e[0].rank),A=Math.max(...t.map(b=>v(b.rank)));g>A&&(h=!0)}}else e.length===2&&e[0].rank===e[1].rank&&(h=!0);let d=!1,x=!1,m=!1;const p=e.length+t.length;if(p>=5){const g=[...e,...t];if(p===7){const b=J(g).class;d=b==="straight_flush",x=d||b==="straight",m=d||b==="flush"}else if(p===6){let A=H(g.filter((I,S)=>S!==0));for(let I=1;I<6;I+=1){const S=H(g.filter((K,k)=>k!==I));nt(S,A)>0&&(A=S)}const b=A.class;d=b==="straight_flush",x=d||b==="straight",m=d||b==="flush"}else if(p===5){const b=H(g).class;d=b==="straight_flush",x=d||b==="straight",m=d||b==="flush"}}return{pair:r,topPair:i,overPair:h,twoPair:o,trips:c,quads:f,fullHouse:l,flush:m,straight:x,straightFlush:d}}function bt(e){const[t,n]=e,s=v(t.rank),r=v(n.rank),o=Math.max(s,r),c=Math.min(s,r),f=t.rank===n.rank,l=dt(t,n),u=Math.abs(s-r);return f&&s>=v("J")||l&&(t.rank==="A"&&n.rank==="K"||n.rank==="A"&&t.rank==="K")?"premium":f&&s>=v("9")||o>=v("A")&&c>=v("Q")&&l||o>=v("A")&&c>=v("K")?"strong":f||l&&u<=2&&o>=v("7")&&c>=v("4")?"speculative":"trash"}function Mt(e,t){const n=e.seats.length,s=(e.buttonIndex+1)%n,r=(e.buttonIndex+2)%n;if(t===s||t===r)return"blinds";const o=(r+1)%n;let c=t-o;return c<0&&(c+=n),c<=1?"early":c<=n-3?"middle":"late"}function At(e,t="tight"){const n=new Set(at(e)),s=e.currentToAct??0,r=e.seats[s],o=r.hole,c=e.community,f=Math.max(0,e.betToCall-r.committedThisStreet),l=Mt(e,s),u=e.lastRaiseAmount||e.rules.bigBlind,a=Math.max(1,e.rules.bigBlind),i=e.seats.map((k,T)=>T===s||k.hasFolded?0:k.stack).filter(k=>k>0),h=Math.min(r.stack,i.length?Math.max(...i):r.stack),d=h/a,x=e.pot.main+f,m=x>0?h/x:1/0;if(e.street==="preflop"){const k=bt(o),T=t==="loose"||k==="premium"||k==="strong"&&(l==="late"||l==="middle");if(f>0){if(d<=20&&n.has("raise")&&(T||k==="speculative"&&l==="late"))return{type:"raise",amount:Math.max(0,r.stack-f)};if(T&&n.has("raise")){const C=Math.max(a,u),j=Math.max(Math.floor(C*1.5),a),$=Math.max(a*3,a),wt=e.betToCall<=a?$:j,z=Math.max(Math.min(wt-f,r.stack-f),a);return(f+z)/Math.max(1,r.stack)>.5&&k==="speculative"?n.has("call")?{type:"call"}:{type:"fold"}:{type:"raise",amount:z}}return k!=="trash"&&n.has("call")?{type:"call"}:n.has("fold")?{type:"fold"}:n.has("check")?{type:"check"}:{type:"call"}}else{if(T&&n.has("bet")){if(d<=12&&(k==="premium"||k==="strong"))return{type:"bet",amount:r.stack};const C=Math.max(a*3,a);return{type:"bet",amount:Math.min(C,r.stack)}}return n.has("check")?{type:"check"}:n.has("call")?{type:"call"}:{type:"fold"}}}const p=xt(o,c),g=kt(o,c),A=vt(o,c),b=p.straightFlush||p.quads||p.fullHouse||p.flush||p.straight||p.trips||p.twoPair||p.overPair,I=p.topPair||p.pair,S=g||A,K=e.pot.main;if(f>0){if(b&&n.has("raise")){if(d<=20||m<=2)return{type:"raise",amount:Math.max(0,r.stack-f)};const k=Math.max(a,u),T=Math.max(Math.floor(k*1.5),a),C=Math.max(Math.floor((K+f)*(t==="tight"?.7:.9)),T);return{type:"raise",amount:Math.min(C,Math.max(0,r.stack-f))}}return(b||I||S)&&n.has("call")?{type:"call"}:(p.straightFlush||p.quads||p.fullHouse||p.flush||p.straight)&&n.has("call")?{type:"call"}:n.has("fold")?{type:"fold"}:n.has("call")?{type:"call"}:{type:"check"}}else{if(b&&n.has("bet")){if(d<=20||m<=2)return{type:"bet",amount:r.stack};const k=Math.max(Math.floor(K*.66),a);return{type:"bet",amount:Math.min(k,r.stack)}}if((I||S)&&n.has("bet")&&Math.random()<.4){const k=Math.max(Math.floor(K*.5),a);return{type:"bet",amount:Math.min(k,r.stack)}}return n.has("check")?{type:"check"}:n.has("call")?{type:"call"}:{type:"fold"}}}const O=self;O.onmessage=e=>{const t=e.data;if(!(!t||t.type!=="run"))try{const s={type:"done",result:yt(t.options,(r,o)=>{const c={type:"progress",completed:r,total:o};O.postMessage(c)})};O.postMessage(s)}catch(n){const s={type:"error",error:n.message};O.postMessage(s)}};function yt(e,t){const{hands:n,seats:s,startingStack:r}=e,o=Array.from({length:Math.max(0,s-1)},(l,u)=>u+1);let c=st(s,o,r);const f=Math.max(1,Math.floor(n/20));for(let l=0;l<n;l+=1){c=rt(c);let u=2e3;for(;c.status==="in_hand"&&u-- >0;)c=ot(c,At(c,"tight"));((l+1)%f===0||l+1===n)&&t(l+1,n)}return{endingStacks:c.seats.map(l=>l.stack),handsPlayed:n}}})();
