(function(){"use strict";const C=["Clubs","Diamonds","Hearts","Spades"],R=["A","2","3","4","5","6","7","8","9","10","J","Q","K"];function N(){const e=[];for(const t of C)for(const a of R)e.push({rank:a,suit:t});return e}function w(e){if(!Number.isInteger(e)||e<=0)throw new Error("numberOfDecks must be a positive integer");const t=[];for(let a=0;a<e;a+=1)t.push(...N());return t}function I(e,t=Math.random){for(let a=e.length-1;a>0;a-=1){const n=t(),r=n>=1?1-Number.EPSILON:n<0?0:n,s=Math.floor(r*(a+1)),l=e[a];e[a]=e[s],e[s]=l}return e}function m(e){const t=e.pop();if(!t)throw new Error("Cannot draw from an empty deck");return t}const c={version:"0.1.2",autoplay:{cpuActionDelayMs:350,playerActionDelayMs:450,autoDealDelayMs:900},pokerAutoplay:{cpuActionDelayMs:150,playerActionDelayMs:200,autoDealDelayMs:500},poker:{startingStack:5e3,chipIconSizePx:30,chipSizePx:30,chipOverlap:.8,maxChipsPerRow:20,rakePercent:0,rakeCap:0,showRakeInUI:!0,blinds:{startingSmallBlind:5,startingBigBlind:10,increaseEveryHands:50,increaseFactor:2},horseshoe:{tableWidthPx:1200,tableHeightPx:720,centerYOffsetPx:-30,basePaddingPx:80,radiusXScale:1.6,radiusYScale:1,arcStartDeg:205,arcEndDeg:-25,edgeBoostEnd:1.1,edgeBoostNearEnd:1.08,topBoostEnd:1.4,topBoostNearEnd:1.5,boardOffsetY:-60,boardGapPx:10,seatWidthPx:200,seatCardScale:.9,potOffsetY:35,showdownOffsetY:70},random:{useSeeded:!0,seed:42,perHandIncrement:1},deal:{perHoleCardMs:300,perBoardCardMs:300,streetPauseMs:1e3},animations:{chipFlyDurationMs:150}},shoe:{defaultNumDecks:6,reshuffleCutoffRatio:.2,cardsPerDeck:52},bankroll:{initialPerSeat:100,casinoInitial:1e4},bets:{defaultPerSeat:10},animation:{cardEnterOffsetTop:-160,cardEnterOffsetDefault:-20,cardExitOffsetY:10,cardStaggerStepMs:80,flatEnterOffsetTop:-80,cardFlipDurationSec:.35},layout:{appMaxWidthPx:1280,handsColumns:3,appControlsMarginBottomPx:12,flatCardOverlapPx:72,flatAppMaxWidthPx:1600,flat:{containerMinHeightVh:75,containerPaddingTopPx:5,containerPaddingBottomPx:10,controlsGapPx:8,dealerLaneGapPx:8,dealerLaneMarginTopPx:8,dealerTotalMarginTopPx:4,playersLaneBottomPx:150,edgePaddingPx:16,playersLaneGapPx:16,playersLanePaddingBottomPx:4,seatPaddingPx:8,seatMinWidthPx:240,seatLowerBoundWidthPx:180,handRowGapPx:4,handRowMarginBottomPx:6,cardRowGapPx:8,infoRowGapPx:8,seatNameMarginBottomPx:4,actionsBottomPx:12,actionsGapPx:8,actionsPaddingPx:8,actionsBorderRadiusPx:10,actionsBetMarginLeftPx:8},multi:{rulesGapPx:12,rulesMarginTopPx:8,detailsMarginTopPx:8,detailsMarginBottomPx:16,progressMarginLeftPx:8,seatBetInputWidthPx:64,doubleTotalsInputWidthPx:120,splitRanksInputWidthPx:140}},simulation:{handsPerRun:1e4,progressUpdateSteps:100},table:{minPlayers:1,maxPlayers:5,defaultNumPlayers:3},ui:{defaultView:"flat",enableFaceImages:!1},rules:{dealerHitsSoft17:!1,blackjackPayout:1.5,doubleTotals:[],doubleAfterSplit:!0,allowSplitRanks:null}};function O(e){return e.rank==="10"||e.rank==="J"||e.rank==="Q"||e.rank==="K"}function x(e){let t=0,a=0;for(const i of e)i.rank==="A"?(a+=1,t+=1):i.rank==="J"||i.rank==="Q"||i.rank==="K"||i.rank==="10"?t+=10:t+=Number(i.rank);let n=t,r=0;for(let i=0;i<a;i+=1)n+10<=21&&(n+=10,r+=1);const s=r>0?n:null,l=s!==null,o=n>21,u=e.length===2&&E(e)&&j(e);return{hardTotal:t,softTotal:s,bestTotal:o?t:n,isSoft:!o&&l,isBlackjack:u,isBust:o}}function E(e){return e.some(t=>t.rank==="A")}function j(e){return e.some(t=>O(t))}function G(e,t,a){const n=Array.from({length:e},(r,s)=>({hands:[],activeHandIndex:0,outcomes:void 0,betsByHand:[],isCPU:t.includes(s)}));return{deck:a?[...a]:I(w(c.shoe.defaultNumDecks)),dealerHand:[],seats:n,activeSeatIndex:0,status:"idle"}}function W(e,t){const a=[...e.deck],n=Array.isArray(t)?t:e.seats.map(()=>t),r=e.seats.map((l,o)=>({...l,hands:[[]],activeHandIndex:0,outcomes:void 0,betsByHand:[n[o]??n[0]??0]})),s=[];for(let l=0;l<2;l+=1){for(const o of r)o.hands[0].push(m(a));s.push(m(a))}return{deck:a,dealerHand:s,seats:r,activeSeatIndex:0,status:"seat_turn"}}function L(e){return e.seats[e.activeSeatIndex]}function U(e){if(e.status!=="seat_turn")return e;const t=[...e.deck],a=e.seats.map(l=>({...l,hands:l.hands.map(o=>[...o]),betsByHand:[...l.betsByHand]})),n=a[e.activeSeatIndex],r=n.activeHandIndex;return n.hands[r].push(m(t)),x(n.hands[r]).isBust?M({...e,deck:t,seats:a}):{...e,deck:t,seats:a}}function K(e){return e.status!=="seat_turn"?e:M(e)}function V(e){if(e.status!=="seat_turn")return e;const t=[...e.deck],a=e.seats.map(s=>({...s,hands:s.hands.map(l=>[...l]),betsByHand:[...s.betsByHand]})),n=a[e.activeSeatIndex],r=n.activeHandIndex;return n.hands[r].length!==2?e:(n.hands[r].push(m(t)),n.betsByHand[r]*=2,M({...e,deck:t,seats:a}))}function Y(e){if(e.status!=="seat_turn")return e;const t=e.seats.map(o=>({...o,hands:o.hands.map(u=>[...u]),betsByHand:[...o.betsByHand]})),a=t[e.activeSeatIndex],n=a.activeHandIndex,r=a.hands[n];if(r.length!==2||r[0].rank!==r[1].rank||a.hands.length>1)return e;const[s,l]=r;return a.hands=[[s],[l]],a.activeHandIndex=0,a.betsByHand=[a.betsByHand[0],a.betsByHand[0]],{...e,seats:t}}function M(e){const t=[...e.deck],a=e.seats.map(o=>({...o})),n=a[e.activeSeatIndex];if(n.activeHandIndex+1<n.hands.length)return n.activeHandIndex+=1,{...e,deck:t,seats:a};if(e.activeSeatIndex+1<a.length)return{...e,deck:t,seats:a,activeSeatIndex:e.activeSeatIndex+1};const s=F({...e,deck:t,seats:a});return{...J(s),status:"round_over"}}function F(e){const t=[...e.deck],a=[...e.dealerHand];for(;;){const n=x(a),r=n.bestTotal;if(!(r<17||c.rules.dealerHitsSoft17&&r===17&&n.isSoft))break;a.push(m(t))}return{...e,deck:t,dealerHand:a,status:"dealer_turn"}}function J(e){const t=e.dealerHand,a=e.seats.map(n=>({...n,outcomes:n.hands.map(r=>Q(r,t))}));return{...e,seats:a}}function Q(e,t){const a=x(e),n=x(t);return a.isBlackjack&&n.isBlackjack?"push":a.isBlackjack?"player_blackjack":n.isBlackjack?"dealer_win":a.isBust?"player_bust":n.isBust?"dealer_bust":a.bestTotal>n.bestTotal?"player_win":a.bestTotal<n.bestTotal?"dealer_win":"push"}function z(e){if(e.status!=="seat_turn")return[];const t=e.seats[e.activeSeatIndex],a=t.activeHandIndex,n=t.hands[a],r=["hit","stand"];if(n.length===2){const s=x(n).hardTotal,o=c.rules.doubleTotals.length===0||c.rules.doubleTotals.includes(s),u=c.rules.doubleAfterSplit||t.hands.length===1;o&&u&&r.push("double");const i=n[0].rank===n[1].rank,S=!c.rules.allowSplitRanks||c.rules.allowSplitRanks.includes(n[0].rank);i&&t.hands.length===1&&S&&r.push("split")}return r}function X(e){const{hand:t,dealerUp:a,available:n,canSplit:r}=e;if(!t||t.length===0||!a)return null;const s=q(a),l=x(t);if(t.length===2&&t[0].rank===t[1].rank&&r){const u=t[0].rank,i=u==="10"||u==="J"||u==="Q"||u==="K"?"T":u,S=!c.rules.allowSplitRanks||c.rules.allowSplitRanks.includes(u),d=(y=>{switch(y){case"A":return"split";case"T":return"stand";case"9":return s===7||s>=10?"stand":"split";case"8":return"split";case"7":return s<=7?"split":"hit";case"6":return s<=6?"split":"hit";case"5":return s<=9?"double":"hit";case"4":return s===5||s===6?"split":"hit";case"3":case"2":return s<=7?"split":"hit";default:return"hit"}})(i);return d==="split"?n.has("split")&&S?"split":g("split",n):d==="double"&&n.has("double")?"double":g(d,n)}if(l.isSoft){const u=l.bestTotal;let i="hit";return u>=19?u===19&&c.rules.dealerHitsSoft17&&s===6?i="double":i="stand":u===18?s<=6?s===2&&c.rules.dealerHitsSoft17||s>=3?i="double":i="stand":i=s<=8?"stand":"hit":u===17?i=s>=3&&s<=6?"double":"hit":u===16||u===15?i=s>=4&&s<=6?"double":"hit":(u===14||u===13)&&(i=s>=5&&s<=6?"double":"hit"),i==="double"?n.has("double")?"double":u===18&&s<=6||u===19&&s===6?g("stand",n):g("hit",n):g(i,n)}const o=l.hardTotal;return o>=17?"stand":o===16?s>=9&&n.has("surrender")?"surrender":s<=6?"stand":"hit":o===15?s===10&&n.has("surrender")?"surrender":s<=6?"stand":"hit":o>=13&&o<=14?s<=6?"stand":"hit":o===12?s>=4&&s<=6?"stand":"hit":o===11?n.has("double")&&s!==11?"double":"hit":o===10?n.has("double")&&s<=9?"double":"hit":o===9&&n.has("double")&&s>=3&&s<=6?"double":"hit"}function q(e){return e.rank==="A"?11:e.rank==="K"||e.rank==="Q"||e.rank==="J"||e.rank==="10"?10:Number(e.rank)}function g(e,t){return e==="split"?t.has("hit")?"hit":"stand":e==="double"&&!t.has("double")||e==="surrender"&&!t.has("surrender")?"hit":e}const H=self;H.onmessage=e=>{const t=e.data;if(!(!t||t.type!=="run"))try{t.options.rules&&Object.assign(c.rules,t.options.rules);const n={type:"done",result:Z(t.options,(r,s)=>{const l={type:"progress",completed:r,total:s};H.postMessage(l)})};H.postMessage(n)}catch(a){const n={type:"error",error:a.message};H.postMessage(n)}};function Z(e,t){const{numHands:a,numPlayers:n,deckCount:r,reshuffleCutoffRatio:s,initialBankrolls:l,casinoInitial:o,betsBySeat:u,existingShoe:i}=e,S=Array.from({length:Math.max(0,n-1)},(b,v)=>v+1);let h=i?[...i]:I(w(r)),d=G(n,S,h),y=Array.from({length:n},(b,v)=>l[v]??0),A=o;const $=Math.floor(r*c.shoe.cardsPerDeck*s),ee=Math.max(1,Math.floor(a/c.simulation.progressUpdateSteps));for(let b=0;b<a;b+=1){(!h||h.length<=$)&&(h=I(w(r))),d={...d,deck:h};const D=Array.from({length:n},(k,B)=>u[B]??u[0]??0);for(d=W(d,D);d.status==="seat_turn";){const k=L(d),B=k.activeHandIndex,f=k.hands[B],p=new Set(z(d)),P=p.has("split")&&k.hands.length===1&&f.length===2&&f[0].rank===f[1].rank;switch(X({hand:f,dealerUp:d.dealerHand[0],available:p,canSplit:P})||"stand"){case"hit":d=U(d);break;case"double":d=V(d);break;case"split":d=Y(d);break;case"surrender":case"stand":default:d=K(d);break}}if(d.status==="round_over"){const k=d.seats.map((f,p)=>{if(!f.outcomes)return 0;let P=0;return f.outcomes.forEach((_,te)=>{const T=f.betsByHand[te]??D[p];switch(_){case"player_blackjack":P+=T*c.rules.blackjackPayout;break;case"player_win":case"dealer_bust":P+=T;break;case"push":break;case"player_bust":case"dealer_win":P-=T;break}}),P});y=y.map((f,p)=>f+(k[p]??0));const B=k.reduce((f,p)=>f+p,0);A-=B,h=d.deck,d={...d,dealerHand:[],status:"idle"}}((b+1)%ee===0||b+1===a)&&t(b+1,a)}return{finalBankrolls:y,finalCasinoBank:A,handsPlayed:a,remainingShoe:h}}})();
