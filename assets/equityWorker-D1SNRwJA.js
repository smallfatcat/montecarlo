(function(){"use strict";const I=Object.fromEntries(["2","3","4","5","6","7","8","9","10","J","Q","K","A"].map((t,e)=>[t,e]));function d(t,e){return e-t}function _(t){return I[t.rank]}function M(t){for(let e=1;e<t.length;e+=1)if(t[e-1]-1!==t[e])return!1;return!0}function y(t){return Array.from(new Set(t)).sort(d)}function O(t){if(t.length!==7)throw new Error("evaluateSeven expects exactly 7 cards");const e=new Map,o=new Map;for(const n of t){const s=_(n);e.set(s,(e.get(s)??0)+1);const r=n.suit,l=o.get(r)??[];l.push(n),o.set(r,l)}for(const[,n]of o)if(n.length>=5){const s=n.map(_).sort(d),r=y(s),l=r.includes(12)?[...r,-1]:r;for(let g=0;g+4<l.length;g+=1){const m=l.slice(g,g+5);if(M(m))return{class:"straight_flush",ranks:[m[0]===-1?3:m[0],...m.slice(1)]}}}const c=Array.from(e.entries()).map(([n,s])=>({v:n,n:s})).sort((n,s)=>s.n-n.n||s.v-n.v),u=c.find(n=>n.n===4);if(u){const n=c.filter(s=>s.v!==u.v).map(s=>s.v).sort(d);return{class:"four_kind",ranks:[u.v,n[0]]}}const a=c.filter(n=>n.n===3),f=c.filter(n=>n.n===2);if(a.length>=2||a.length>=1&&f.length>=1){const n=a[0],s=a.length>=2?{v:a[1].v}:{v:f[0].v};return{class:"full_house",ranks:[n.v,s.v]}}for(const[,n]of o)if(n.length>=5)return{class:"flush",ranks:n.map(_).sort(d).slice(0,5)};{const n=y(t.map(_)),s=n.includes(12)?[...n,-1]:n;for(let r=0;r+4<s.length;r+=1){const l=s.slice(r,r+5);if(M(l))return{class:"straight",ranks:[l[0]===-1?3:l[0],...l.slice(1)]}}}if(a.length>=1){const n=a[0],s=c.filter(r=>r.n===1).map(r=>r.v).sort(d).slice(0,2);return{class:"three_kind",ranks:[n.v,...s]}}if(f.length>=2){const[n,s]=f.slice(0,2).sort((l,g)=>g.v-l.v),r=c.filter(l=>l.n===1).map(l=>l.v).sort(d)[0];return{class:"two_pair",ranks:[n.v,s.v,r]}}if(f.length===1){const n=f[0],s=c.filter(r=>r.n===1).map(r=>r.v).sort(d).slice(0,3);return{class:"pair",ranks:[n.v,...s]}}return{class:"high_card",ranks:y(t.map(_)).slice(0,5)}}const N=["Clubs","Diamonds","Hearts","Spades"],B=["A","2","3","4","5","6","7","8","9","10","J","Q","K"];function D(){const t=[];for(const e of N)for(const o of B)t.push({rank:o,suit:e});return t}const E=self;E.onmessage=t=>{try{const e=t.data;if(!e||e.type!=="run")return;const{seats:o,community:c,samples:u}=e.data,f={type:"done",result:T(o,c,u)};E.postMessage(f)}catch(e){const o={type:"error",error:e.message};E.postMessage(o)}};function T(t,e,o){const c=[];t.forEach((i,p)=>{!i.folded&&i.hole.length===2&&c.push(p)});const u=[];t.forEach((i,p)=>{!i.folded&&i.hole.length!==2&&u.push(p)});const a=c.length+u.length,f=new Array(t.length).fill(0),k=new Array(t.length).fill(0);if(a<=1)return{win:f,tie:k};const n=D(),s=i=>`${i.rank}-${i.suit}`,r=new Set;e.forEach(i=>r.add(s(i))),t.forEach(i=>{i.hole.length===2&&i.hole.forEach(p=>r.add(s(p)))});const l=n.filter(i=>!r.has(s(i))),g=Math.max(0,5-e.length),m=Math.random;for(let i=0;i<o;i+=1){const p=l.slice();j(p,m);const b={};for(const h of u){const R=p.pop(),w=p.pop();b[h]=[R,w]}const P=p.slice(0,g),Q=[...e,...P];let A=-1,S=[],v=[];const K=(h,R)=>{const w=O([...R,...Q]),x=H(w.class);if(v.length===0)A=x,S=w.ranks,v=[h];else{const q=J(x,w.ranks,A,S);q>0?(A=x,S=w.ranks,v=[h]):q===0&&v.push(h)}};c.forEach(h=>K(h,t[h].hole)),u.forEach(h=>K(h,b[h])),v.length===1?f[v[0]]+=1:v.forEach(h=>{k[h]+=1})}return{win:f,tie:k}}function j(t,e){for(let o=t.length-1;o>0;o-=1){const c=Math.floor(e()*(o+1)),u=t[o];t[o]=t[c],t[c]=u}}function H(t){switch(t){case"high_card":return 0;case"pair":return 1;case"two_pair":return 2;case"three_kind":return 3;case"straight":return 4;case"flush":return 5;case"full_house":return 6;case"four_kind":return 7;case"straight_flush":return 8;default:return 0}}function J(t,e,o,c){if(t!==o)return t-o;const u=Math.max(e.length,c.length);for(let a=0;a<u;a+=1){const f=e[a]??-1,k=c[a]??-1;if(f!==k)return f-k}return 0}})();
